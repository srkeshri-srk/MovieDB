//
//  NetworkLayer+DataTask.swift
//  MovieDB
//
//  Created by Shreyansh Raj  Keshri on 13/12/23.
//  Copyright (c) 2023 SRK. All rights reserved.
//
//  This file was generated by the Shreyansh Raj Keshri ðŸ‘¾
//


import Foundation

extension NetworkLayerServices {
    public func dataTask<T: Codable>(_ api: APIRequest, completion: @escaping (_ result: Result<T, NetworkError>) -> Void) {
        guard let urlRequest = URLGenerator.prepareURLRequest(with: api) else {
            return completion(.failure(.urlNotFound))
        }
                    
        self.urlSession.dataTask(with: urlRequest) { data, response, error in
            //Data Validation
            guard let data = data else {
                completion(.failure(.noDataFound))
                return
            }
            
            //Status Validation
            guard let response = response as? HTTPURLResponse, (200..<300) ~= response.statusCode else {
                let jsonData = self.readLocalJSONFile(forName: "MovieDetailsJSON")
                if let data = jsonData {
                    if let result: T = JSONParser().decode(data) {
                        completion(.success(result))
                    } else {
                        completion(.failure(.dataCantParse))
                    }
                }
                return
            }
            
            //Parsing
            if let result: T = JSONParser().decode(data) {
                completion(.success(result))
            } else {
                completion(.failure(.dataCantParse))
            }
            
        }.resume()
    }
    
    
    func readLocalJSONFile(forName name: String) -> Data? {
        do {
            if let filePath = Bundle.main.path(forResource: name, ofType: "json") {
                let fileUrl = URL(fileURLWithPath: filePath)
                let data = try Data(contentsOf: fileUrl)
                return data
            }
        } catch {
            print("error: \(error)")
        }
        return nil
    }
}
